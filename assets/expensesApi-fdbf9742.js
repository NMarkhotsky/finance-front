import{A as a,B as i,S as g}from"./index-05bfd78d.js";const m=t=>(t=t.replace(/[^\d.]/g,""),(t.match(/\./g)||[]).length>1&&(t=t.replace(/\./g,(e,o,r)=>o===r.indexOf(".")?e:"")),t),l=t=>{t.startsWith(".")&&(t="0"+t);const s=(t.match(/\./g)||[]).length;return s===0?t=t+".00":s===1&&t.endsWith(".")?t=t+"00":s===1&&!t.endsWith(".")&&(t=t+"0"),parseFloat(t).toFixed(2)},n=t=>{const s=Number(t).toFixed(2).split(".");return`${s[0].replace(/\B(?=(\d{3})+(?!\d))/g," ")}.${s[1]}`},c=t=>{const s=new Date(t),e=s.getDate().toString().padStart(2,"0"),o=(s.getMonth()+1).toString().padStart(2,"0"),r=s.getFullYear();return`${e}.${o}.${r}`},p=(t,s)=>s?s==="expenses"?t.map(e=>({...e,date:c(e.date),sum:n((0-e.sum).toFixed(2))})):t.map(e=>({...e,date:c(e.date),sum:n(e.sum)})):t.map(e=>({...e,date:c(e.date),sum:e.type==="income"?n(e.sum):n((0-e.sum).toFixed(2))})),u=t=>{const s=new Date(t);return new Intl.DateTimeFormat("en-US",{month:"long"}).format(s)};a.defaults.baseURL=i;const y=async t=>{try{const s=await a.post("/transactions",t);return s.status===200&&g("success","Created new transaction"),s}catch(s){console.log(s)}},f=async t=>{try{const s=await a.delete(`/transactions/${t}`);return s.status===200&&g("success",s.data),s}catch(s){console.log(s)}},h=async()=>{try{const{data:t}=await a.get("/transactions/");return t}catch(t){console.log(t)}};a.defaults.baseURL=i;const w=async()=>{try{const{data:t}=await a.get("/transactions/income");return t.transactions}catch(t){console.log(t)}},x=async()=>{try{const{data:t}=await a.get("/transactions/income/summary");return t}catch(t){console.log(t)}},S=async()=>{try{return await a.get("/transactions/income/category")}catch(t){console.log(t)}},D=async({category:t})=>{try{const{data:s}=await a.get(`/transactions/income/description?category=${t}`);return s}catch(s){console.log(s)}};a.defaults.baseURL=i;const b=async()=>{try{const{data:t}=await a.get("/transactions/expenses");return t.transactions}catch(t){console.log(t)}},$=async()=>{try{const{data:t}=await a.get("/transactions/expenses/summary");return t}catch(t){console.log(t)}},F=async()=>{try{return await a.get("/transactions/expenses/category")}catch(t){console.log(t)}},C=async({category:t})=>{try{const{data:s}=await a.get(`/transactions/expenses/description?category=${t}`);return s}catch(s){console.log(s)}};export{y as a,p as b,m as c,w as d,f as e,n as f,b as g,h,$ as i,x as j,u as k,C as l,D as m,l as n,S as o,F as p};
